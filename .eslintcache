[{"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\serviceWorkerRegistration.js":"1","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Carousel\\Carousel.js":"2","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\App.js":"3","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Search\\Search.js":"4","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\ContentModal\\ContentModal.js":"5","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\Recommendation.js":"6","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\MainNav.js":"7","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Genres\\Genres.js":"8","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\Data\\userData.js":"9","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Series\\Series.js":"10","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\index.js":"11","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Header\\Header.js":"12","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Trending\\Trending.js":"13","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Movies\\Movies.js":"14","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Pagination\\CustomPagination.js":"15","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\SingleContent\\SingleContent.js":"16","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\config\\config.js":"17","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\hooks\\useGenre.js":"18","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\KNearestMovies.js":"19","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\ShowMovies.js":"20"},{"size":5092,"mtime":1625636549000,"results":"21","hashOfConfig":"22"},{"size":1417,"mtime":1653745668829,"results":"23","hashOfConfig":"22"},{"size":1472,"mtime":1653836156808,"results":"24","hashOfConfig":"22"},{"size":2987,"mtime":1653762219696,"results":"25","hashOfConfig":"22"},{"size":4402,"mtime":1653745691506,"results":"26","hashOfConfig":"22"},{"size":2639,"mtime":1653843815385,"results":"27","hashOfConfig":"22"},{"size":2094,"mtime":1653845001080,"results":"28","hashOfConfig":"22"},{"size":1543,"mtime":1653745705200,"results":"29","hashOfConfig":"22"},{"size":18656,"mtime":1653762087479,"results":"30","hashOfConfig":"22"},{"size":1990,"mtime":1653744396373,"results":"31","hashOfConfig":"22"},{"size":281,"mtime":1625636549000,"results":"32","hashOfConfig":"22"},{"size":199,"mtime":1653842374534,"results":"33","hashOfConfig":"22"},{"size":1287,"mtime":1653744409479,"results":"34","hashOfConfig":"22"},{"size":2007,"mtime":1653744373001,"results":"35","hashOfConfig":"22"},{"size":863,"mtime":1625636549000,"results":"36","hashOfConfig":"22"},{"size":841,"mtime":1625636549000,"results":"37","hashOfConfig":"22"},{"size":528,"mtime":1625636549000,"results":"38","hashOfConfig":"22"},{"size":224,"mtime":1625636549000,"results":"39","hashOfConfig":"22"},{"size":3333,"mtime":1653844454208,"results":"40","hashOfConfig":"22"},{"size":1480,"mtime":1653841816331,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"skjene",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Carousel\\Carousel.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\App.js",["90"],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Search\\Search.js",[],["91","92"],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\ContentModal\\ContentModal.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\Recommendation.js",["93"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { userData } from './Data/userData';\r\nimport SingleContent from '../../components/SingleContent/SingleContent.js';\r\nimport Dropdown from 'react-dropdown';\r\nimport './Recommendation.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Recommendation = ({setRatingChange}) => {\r\n  let newUserRatings = {};\r\n\r\n  const options = [\r\n    'Not Seen', 1, 2, 3, 4, 5\r\n  ];\r\n  const defaultOption = options[0];\r\n  const [movies, setMovies] = useState([]);\r\n  const history = useHistory();\r\n  const ratedMovies = userData[0].movie;\r\n  for(var i = 0; i<ratedMovies.length; ++i){\r\n    const currId = ratedMovies[i].movId;\r\n    newUserRatings[currId] = 'not seen';\r\n  }\r\n  //console.log('fsa', ratedMovies)\r\n  useEffect(() =>\r\n    {\r\n     movies.length<10 && fetchSearch(userData[0].movie[movies.length].title, userData[0].movie[movies.length].movId)\r\n    },[movies]\r\n  )\r\n  \r\n\r\n  const handleChange = (e, id) => {\r\n     newUserRatings[id] = e.value;\r\n     console.log(e, id);\r\n  }\r\n  const handleSubmit = () => {\r\n     console.log(newUserRatings);\r\n     setRatingChange(newUserRatings);\r\n     history.push(\"/top-movies\")\r\n  }\r\n\r\n const fetchSearch = async (searchText, id) => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=0fbd2641fcad9e6a8793654997ab0fa1&query=${searchText}`\r\n        );\r\n        data.results[0]['movId'] = id;\r\n        const newMov = [...movies, data.results[0]];\r\n        setMovies(newMov)\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className = 'pg-hdr'> Rate out of 5‚≠ê the below movies, you have watched:</h2>\r\n    <div className = 'all-cards'>\r\n    {\r\n      (movies.length===0)?\"Not loaded yet\":\r\n      movies.map((movie) => (\r\n        <div >\r\n           <SingleContent\r\n              key={movie.id}\r\n              id={movie.id}\r\n              poster={movie.poster_path}\r\n              title={movie.title || movie.name}\r\n              date={movie.first_air_date || movie.release_date}\r\n              media_type={\"movie\"}\r\n              vote_average={movie.vote_average}\r\n            />\r\n            <Dropdown className=\"drp-btn\" options={options} onChange={(e) => handleChange(e, movie.movId)} value={defaultOption} placeholder=\"Select an option\" />\r\n        </div>\r\n      ))\r\n    }\r\n    </div >\r\n    <div className='btn-container'>\r\n    <button type=\"submit\" className = 'rec-btn' onClick={handleSubmit}>Done</button>\r\n    </div>\r\n    \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Recommendation\r\n","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\MainNav.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Genres\\Genres.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\Data\\userData.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Series\\Series.js",[],["94","95"],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\index.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Header\\Header.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Trending\\Trending.js",[],["96","97"],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Movies\\Movies.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\Pagination\\CustomPagination.js",[],["98","99"],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\components\\SingleContent\\SingleContent.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\config\\config.js",[],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\hooks\\useGenre.js",[],["100","101"],"C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\KNearestMovies.js",["102","103","104","105","106"],"import React, {useState, useEffect} from 'react'\r\nimport { userData } from './Data/userData';\r\nimport SingleContent from '../../components/SingleContent/SingleContent.js';\r\nimport ShowMovies from './ShowMovies'\r\n\r\n\r\n    \r\nconst KNearestMovies = ({newUserRatings}) => {\r\n  //console.log(newUserRatings);\r\n\r\n  const newUser = {\r\n    id: 14,\r\n    name: 'user14',\r\n     movie: [\r\n        \r\n    ]\r\n  }\r\n  // make new user object out of newUserRatings\r\n  \r\n  const allMovies = userData[0].movie;\r\n  // console.log('allLen', allMovies.length);\r\n  for(let i = 0; i<allMovies.length; ++i){\r\n    let currRating  = newUserRatings[allMovies[i].movId];\r\n    const currMovie = allMovies[i];\r\n    if(currRating==='not seen'){\r\n      currRating  = -1\r\n    }\r\n    newUser.movie.push(\r\n      {\r\n        'movId' : currMovie.movId,\r\n        'title' : currMovie.title,\r\n        'rating': currRating\r\n      }\r\n    )\r\n  }\r\n  console.log('nu1', newUser);\r\n  var similarityScores = {};\r\n    for (var i = 0; i < userData.length; i++) {\r\n      var other = userData[i];\r\n      var similarity = euclideanDistance(newUser, other);\r\n      similarityScores[other.id] = similarity;\r\n    }\r\n  //console.log(similarityScores);\r\n    userData.sort(compareSimilarity);\r\n\r\n  function compareSimilarity(a, b) {\r\n    var score1 = similarityScores[a.id];\r\n    var score2 = similarityScores[b.id];\r\n    return score2 - score1;\r\n  }\r\n\r\n  function euclideanDistance(user1, user2) {\r\n    console.log('nu2', user1, user2);\r\n    var diffSquareSum = 0;\r\n    for(var j = 0; j<user1.movie.length; ++j){\r\n        if(user1.movie[j].rating!==-1&&user2.movie[j].rating!==-1){\r\n            diffSquareSum += Math.pow((user1.movie[j].rating-user2.movie[j].rating), 2);\r\n        }\r\n    }\r\n    var euclid = Math.sqrt(diffSquareSum);\r\n    var similarity = 1/(1+euclid);\r\n    return similarity;\r\n  }\r\n  \r\n\r\n  var notSeen = [];\r\n  for(var i = 0; i<newUser.movie.length; ++i){\r\n      if(newUser.movie[i].rating===-1){\r\n        notSeen.push(newUser.movie[i].movId);\r\n      }\r\n  }\r\n  \r\n  var idx = 0;\r\n  const movies = newUser.movie;\r\n  let predictedRating = []\r\n  let allPredictions = {}\r\n  for(var i = 0; i<movies.length; ++i){\r\n      const id = movies[i].movId;\r\n      const title = movies[i].title;\r\n      if(id===notSeen[idx]){\r\n        var userRatingSum = 0;\r\n        var similaritySum = 0;\r\n        for(var j = 0; j<userData.length; ++j){\r\n          const userRating = userData[j].movie[i].rating;\r\n          const similarity = similarityScores[userData[j].id];\r\n          userRatingSum += userRating*similarity;\r\n          similaritySum += similarity;\r\n        }\r\n        const prediction = userRatingSum/similaritySum;\r\n        predictedRating.push({\r\n          'id' : id,\r\n          'prediction' : prediction,\r\n           'title' : title\r\n        })\r\n        allPredictions[id] = prediction;\r\n        idx++;\r\n      }\r\n  }\r\n  //console.log(predictedRating);\r\n  predictedRating.sort(comparePredictions);\r\n  function comparePredictions(a, b) {\r\n    var score1 = allPredictions[a.id];\r\n    var score2 = allPredictions[b.id];\r\n    return score2 - score1;\r\n  }\r\n  let topMovies = [];\r\n  for(let k = 0; k<predictedRating.length; ++k){\r\n      topMovies.push(predictedRating[k].title);\r\n  }\r\n  \r\n  \r\n  return (\r\n    <ShowMovies topMovies = {topMovies} />\r\n  )\r\n}\r\n\r\nexport default KNearestMovies;\r\n","C:\\Users\\lenovo\\Desktop\\react-entertainment-hub-master\\src\\Pages\\Recommendation\\ShowMovies.js",["107"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport SingleContent from '../../components/SingleContent/SingleContent.js';\r\n\r\nconst ShowMovies = ({topMovies}) => {\r\n    const [moviesToShow, setMoviesToShow] = useState([]);\r\n    useEffect(() =>\r\n    {\r\n        moviesToShow.length<topMovies.length && fetchSearch(topMovies[moviesToShow.length])\r\n    },[moviesToShow]\r\n  )\r\n  \r\n\r\n const fetchSearch = async (searchText) => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=0fbd2641fcad9e6a8793654997ab0fa1&query=${searchText}`\r\n        );\r\n        const newMov = [...moviesToShow, data.results[0]];\r\n        setMoviesToShow(newMov)\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n  };\r\n  return (\r\n    <div>\r\n        <h2 className = 'pg-hdr'>Movies you may like to watch:</h2>\r\n        <div className = 'all-cards'>\r\n        {\r\n          moviesToShow.map((movie) => (\r\n            <div >\r\n              <SingleContent\r\n                key={movie.id}\r\n                id={movie.id}\r\n                poster={movie.poster_path}\r\n                title={movie.title || movie.name}\r\n                date={movie.first_air_date || movie.release_date}\r\n                media_type={\"movie\"}\r\n                vote_average={movie.vote_average}\r\n              /> \r\n            </div>\r\n          ))\r\n      }\r\n    </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default ShowMovies\r\n",{"ruleId":"108","severity":1,"message":"109","line":13,"column":9,"nodeType":"110","messageId":"111","endLine":13,"endColumn":17},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":27,"column":7,"nodeType":"118","endLine":27,"endColumn":15,"suggestions":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","replacedBy":"121"},{"ruleId":"112","replacedBy":"122"},{"ruleId":"114","replacedBy":"123"},{"ruleId":"112","replacedBy":"124"},{"ruleId":"114","replacedBy":"125"},{"ruleId":"112","replacedBy":"126"},{"ruleId":"114","replacedBy":"127"},{"ruleId":"108","severity":1,"message":"128","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":24},{"ruleId":"108","severity":1,"message":"129","line":1,"column":26,"nodeType":"110","messageId":"111","endLine":1,"endColumn":35},{"ruleId":"108","severity":1,"message":"130","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":67,"column":11,"nodeType":"110","messageId":"133","endLine":67,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":77,"column":11,"nodeType":"110","messageId":"133","endLine":77,"endColumn":12},{"ruleId":"116","severity":1,"message":"134","line":10,"column":7,"nodeType":"118","endLine":10,"endColumn":21,"suggestions":"135"},"no-unused-vars","'userData' is defined but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSearch'. Either include it or remove the dependency array.","ArrayExpression",["138"],["136"],["137"],["136"],["137"],["136"],["137"],["136"],["137"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'SingleContent' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'fetchSearch' and 'topMovies'. Either include them or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [fetchSearch, movies]",{"range":"144","text":"145"},"Update the dependencies array to be: [fetchSearch, moviesToShow, topMovies]",{"range":"146","text":"147"},[942,950],"[fetchSearch, movies]",[383,397],"[fetchSearch, moviesToShow, topMovies]"]